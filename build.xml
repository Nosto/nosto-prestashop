<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ 2013-2020 Nosto Solutions Ltd
  ~
  ~ NOTICE OF LICENSE
  ~
  ~ This source file is subject to the Academic Free License (AFL 3.0)
  ~ that is bundled with this package in the file LICENSE.txt.
  ~ It is also available through the world-wide-web at this URL:
  ~ http://opensource.org/licenses/afl-3.0.php
  ~ If you did not receive a copy of the license and are unable to
  ~ obtain it through the world-wide-web, please send an email
  ~ to contact@nosto.com so we can send you a copy immediately.
  ~
  ~ DISCLAIMER
  ~
  ~ Do not edit or add to this file if you wish to upgrade PrestaShop to newer
  ~ versions in the future. If you wish to customize PrestaShop for your
  ~ needs please refer to http://www.prestashop.com for more information.
  ~
  ~ @author    Nosto Solutions Ltd <contact@nosto.com>
  ~ @copyright 2013-2020 Nosto Solutions Ltd
  ~ @license   http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
  -->

<!--suppress XmlUnboundNsPrefix -->
<project name="nostotagging" default="dist">
    <php expression="include('./libs/autoload.php')"/>
    <property name="package" value="${phing.project.name}" override="true"/>
    <property name="buildstatic" value="./build/static" override="false"/>
    <property name="zipbase" value="./build/src/" override="false"/>
    <property name="buildsrc" value="./build/src/nostotagging" override="false"/>
    <property name="buildbin" value="./build/bin" override="false"/>
    <property name="buildroot" value="./build" override="true"/>
    <property name="builddest" value="./build/package" override="true"/>
    <property name="idea" value=".idea" override="true"/>
    <property name="srcdir" value="${project.basedir}" override="true"/>
    <property name="packagename" value="${project.basedir}" override="true"/>

    <!-- ============================================  -->
    <!-- Target: prepare                               -->
    <!-- ============================================  -->
    <target name="prepare">
        <echo msg="Cleaning up directory ./build"/>
        <delete dir="${builddest}"/>
        <delete dir="${buildsrc}"/>
        <delete dir="${zipbase}"/>
        <delete dir="${idea}"/>
        <mkdir dir="${builddest}"/>
        <mkdir dir="${zipbase}"/>
        <mkdir dir="${buildsrc}"/>
        <copy todir="${buildsrc}">
            <fileset refid="sourcefiles"/>
        </copy>
        <phingcall target="updatedependencies"/>
        <phingcall target="cleandependencies"/>
        <phingcall target="fixcompatibility"/>
        <phingcall target="copyindex"/>
    </target>

    <target name="copyindex">
        <echo msg="Copying index file"/>
        <exec executable="sh">
            <arg value="${buildbin}/copy_index.sh"/>
        </exec>
    </target>

    <target name="phpcpd">
        <exec executable="./libs/bin/phpcpd" passthru="true">
            <arg value="--min-lines=1"/>
            <arg value="."/>
        </exec>
    </target>

    <target name="phpcbf">
        <exec executable="./libs/bin/phpcbf" passthru="true">
            <arg value="--colors"/>
            <arg value="--report-width=auto"/>
            <arg value="--standard=ruleset.xml"/>
            <arg value="."/>
        </exec>
    </target>

    <target name="phpcs">
        <exec executable="./libs/bin/phpcs" passthru="true">
            <arg value="--colors"/>
            <arg value="--report-width=auto"/>
            <arg value="--standard=ruleset.xml"/>
            <arg value="."/>
        </exec>
    </target>

    <target name="fixcompatibility">
        <echo msg="Making PHP compatibility fixes"/>
        <exec executable="sed">
            <arg value="-i"/>
            <arg value="-e"/>
            <arg value="s/generated by Composer/generated by Composer(\altered by Nosto Phing\)/g"/>
            <arg value="${buildsrc}/libs/autoload.php"/>
        </exec>
        <exec executable="sed">
            <arg value="-i"/>
            <arg value="-e"/>
            <arg value="s/__DIR__/dirname\(__FILE__\)/g"/>
            <arg value="${buildsrc}/libs/autoload.php"/>
        </exec>
        <delete file="${buildsrc}/libs/autoload.php-e"/>
        <echo msg="Making Prestashop validator compatibility hacks"/>
        <exec executable="sed">
            <arg value="-i"/>
            <arg value="-e"/>
            <arg value="s/$this->name = self::MODULE_NAME/$this->name = 'nostotagging'/g"/>
            <arg value="${buildsrc}/nostotagging.php"/>
        </exec>
        <delete file="${buildsrc}/nostotagging.php-e"/>
        <exec executable="sed">
            <arg value="-i" />
            <arg value="-e" />
            <arg value="s/$this->version = self::PLUGIN_VERSION/$this->version = '${version}'/g" />
            <arg value="${buildsrc}/nostotagging.php" />
        </exec>
        <delete file="${buildsrc}/nostotagging.php-e"/>
    </target>

    <target name="phpmd">
        <echo msg="Checking code messes"/>
        <phpmd rulesets="unusedcode">
            <fileset dir="${buildsrc}">
                <exclude name="**lib**"/>
                <exclude name="**backward_compatibility**"/>
            </fileset>
            <formatter type="text" useFile="false" outfile="."/>
        </phpmd>
    </target>

    <target name="cleandependencies">
        <delete dir="${buildsrc}/libs/nosto/php-sdk/tests"/>
        <delete file="${buildsrc}/libs/nosto/php-sdk/codeception.yml"/>
        <delete file="${buildsrc}/libs/nosto/php-sdk/.gitignore"/>
        <delete file="${buildsrc}/libs/nosto/php-sdk/Gruntfile.js"/>
        <delete file="${buildsrc}/libs/nosto/php-sdk/package.json"/>
        <delete file="${buildsrc}/libs/nosto/php-sdk/composer.json"/>
        <delete file="${buildsrc}/.env"/>
    </target>

    <target name="updatedependencies">
        <echo msg="Updating dependencies"/>
        <exec executable="composer" dir="${buildsrc}">
            <arg value="install"/>
            <arg value="--no-dev"/>
        </exec>
        <echo msg="Files copied and compressed"/>
    </target>

    <target name="phan">
        <exec executable="./libs/bin/phan" passthru="true">
            <arg value="--progress-bar"/>
            <arg value="--signature-compatibility"/>
            <arg value="--config-file=phan.php"/>
            <arg value="--dead-code-detection"/>
            <arg value="."/>
        </exec>
    </target>

    <fileset dir="${srcdir}" id="sourcefiles">
        <patternset id="nostotagging.sources">
            <include name="**"/>
            <exclude name="*.DS_STORE"/>
            <exclude name="phan.php"/>
            <exclude name="Dockerfile"/>
            <exclude name="Jenkinsfile"/>
            <exclude name="**/.idea/**"/>
            <exclude name="**/.github/**"/>
            <exclude name="**/.phan/**"/>
            <exclude name="**/tests/**"/>
            <exclude name="**/phing/**"/>
            <exclude name="**/build/**"/>
            <exclude name="**/build.xml"/>
            <exclude name="**/ruleset.xml"/>
            <exclude name="**/*Gruntfile*"/>
            <exclude name="**/*codeception*"/>
            <exclude name="libs/**"/>
            <exclude name="**/*package.json*"/>
            <exclude name="config*.xml"/>
        </patternset>
    </fileset>

    <!-- ============================================  -->
    <!-- Target: build                                 -->
    <!-- ============================================  -->
    <target name="build" depends="fixcompatibility, prepare, phpcs, phpmd">
        <exec command="xmllint --nocdata --xpath 'module/version/text()' config.xml" outputProperty="version" />
        <echo msg="Building version ${version}"/>
        <exec executable="zip" dir="${zipbase}">
            <arg value="-r"/>
            <arg value="nostotagging.zip"/>
            <arg value="nostotagging"/>
        </exec>
        <move file="${zipbase}/nostotagging.zip"
              tofile="${builddest}/${version}-Nosto.-.Personalization.for.PrestaShop.zip"/>
        <echo msg="Files copied and compressed"/>
    </target>

    <!-- ============================================  -->
    <!-- (DEFAULT)  Target: dist                       -->
    <!-- ============================================  -->
    <target name="dist" depends="build">
        <echo msg="${version} built. All done."/>
    </target>
</project>
